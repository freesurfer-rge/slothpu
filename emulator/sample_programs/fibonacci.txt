# Fibonacci

# Computes Fibonacci numbers using a two byte accumulator
# This limits us to the first 20 or so, so the input is a singl
# byte






# -----------------------------------------------------

# Subroutine to add two 2-byte numbers
# We can assume that R7 is set for our stackframe
# The first four bytes are
# a_lo, a_hi, b_lo, b_hi
# We then need to put result_lo and result_hi into
# the next two bytes

84 REG SET000 R6

# Load the two low bytes into R1 and R2
86 MEM LOAD R6 R7 R1
88 SALU INC R6 R6
90 SALU INC R6 R6
92 MEM LOAD R6 R7 R2

# Add the two low bytes store in R3
94 DALU ADD R1 R2 R3
# Grab the status register
96 REG LOADSTATUS R4

# Now store R4 into the low byte of the answer
98 SALU INC R6 R6
100 SALU INC R6 R6
102 MEM STORE R6 R7 R3

# Mask the status register for the DALU flag
# DALU flag is in the second bit of the status register
104 REG SET002 R2
106 DALU AND R2 R4 R4 # R4 now just holds the carry bit

# Now we add the two high bytes into R1 and R2
108 REG SET001 R6
110 MEM LOAD R6 R7 R1
112 SALU INC R6 R6
114 SALU INC R6 R6
116 MEM LOAD R6 R7 R2

# Do R1 + R2 -> R3
118 DALU ADD R1 R2 R3

# If we had a carry from the low byte
# we need to increment
120 REG SET000 R0
122 REG SET128 R1 # First instruction past the INC
124 PC JUMPZERO R1 R0 R4  # Test the carry bit
126 SALU INC R3 R3

# Save out the high byte
128 SALU INC R6 R6
130 SALU INC R6 R6
132 MEM STORE R6 R7 R3

# Finally, return
134 PC RET